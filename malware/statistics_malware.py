import tensorflow as tf
import csv
import os
import shutil
import pandas as pd
import random
import matplotlib.pyplot as plt
from tensorflow.keras.utils import plot_model
import numpy as np
from mlxtend.plotting import plot_confusion_matrix
from sklearn.metrics import confusion_matrix


csv_path = os.path.join('Dataset/dataset.csv')

# path_model_malware = os.path.join("results/malware_all.h5")
path_model_malware = os.path.join("malware.h5")
model = tf.keras.models.load_model(path_model_malware, compile=False)

# plot_model(model, to_file='model.png', show_shapes=True)

labels = []
data = []
with open(csv_path) as csv_file:
    csv_reader = csv.reader(csv_file, delimiter=',')
    for row in csv_reader:
        if "malicious" in row[0]:
            labels.append(1)
        else:
            labels.append(0)
        data_r = [float(x) for x in row[1:]]
        data.append(data_r)

# 0-100k malicious rest legit
train_labels = labels[:90000] + labels[110000:]
train_data = data[:90000] + data[110000:]
test_labels = labels[90000:110000]
test_data = data[90000:110000]




Y_pred = model.predict(np.array(test_data))
y_pred = np.around(Y_pred)
cm = confusion_matrix(test_labels, y_pred)
plt.figure()
plot_confusion_matrix(cm, figsize=(12, 8), hide_ticks=True)
plt.xticks(range(2), ['Malware', 'Safe'], fontsize=16)
plt.yticks(range(2), ['Malware', 'Safe'], fontsize=16)
# plt.savefig("matrix.png")
plt.show()